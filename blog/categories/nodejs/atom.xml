<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nodejs | Like的世界]]></title>
  <link href="http://www.malike.net.cn/blog/categories/nodejs/atom.xml" rel="self"/>
  <link href="http://www.malike.net.cn/"/>
  <updated>2020-04-30T17:23:58+00:00</updated>
  <id>http://www.malike.net.cn/</id>
  <author>
    <name><![CDATA[Like Ma]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nvm简介——Debian/Ubuntu中管理多版本Node.js]]></title>
    <link href="http://www.malike.net.cn/blog/2016/06/09/nvm-tutorial/"/>
    <updated>2016-06-09T00:00:00+00:00</updated>
    <id>http://www.malike.net.cn/blog/2016/06/09/nvm-tutorial</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/creationix/nvm">nvm</a>是管理Node.js版本的工具，它支持在多个Node.js版本间切换。</p>

<h2>一、安装</h2>

<pre><code class="bash">git clone https://github.com/creationix/nvm.git ~/.nvm
cd ~/.nvm
git checkout `git describe --abbrev=0 --tags`
</code></pre>

<p>激活nvm</p>

<pre><code class="bash">. ~/.nvm/nvm.sh
</code></pre>

<p>为了每次登录后自动激活nvm，需将<code>NMV_DIR</code>、<code>nvm.sh</code>和补齐加入bash的~/.bashrc（或zsh的~/.zshrc）</p>

<pre><code class="bash">export NVM_DIR=~/.nvm
[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; . "$NVM_DIR/nvm.sh"
[ -r $NVM_DIR/bash_completion ] &amp;&amp; . $NVM_DIR/bash_completion
</code></pre>

<p>在国内，为了加速下述安装，可在bash的~/.bashrc（或zsh的~/.zshrc）加入：</p>

<pre><code class="bash">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node
</code></pre>

<h2>二、常用命令</h2>

<h3>列表可安装的Node.js版本</h3>

<pre><code class="bash">nvm ls-remote
</code></pre>

<p>除了Node.js官方版本，还支持io.js</p>

<h3>安装指定版本的Node.js</h3>

<pre><code class="bash">nvm install 10.16.2
</code></pre>

<p>它会自动下载指定版本的Node.js二进制包（不需要编译源码），安装在~/.nvm/versions/node</p>

<p>通常，最好安装最近的长周期版本：</p>

<pre><code class="bash">nvm install --lts
</code></pre>

<h3>卸载指定版本的Node.js</h3>

<pre><code class="bash">nvm uninstall 10.16.2
</code></pre>

<h3>设置shell的Node.js版本</h3>

<pre><code class="bash">nvm use 10.16.2
</code></pre>

<p>它将Node.js指定版本的bin路径加入PATH.</p>

<p>还原环境变量PATH</p>

<pre><code class="bash">nvm deactivate
</code></pre>

<h3>迁移npm至新版本的Node.js</h3>

<pre><code>nvm install node --reinstall-packages-from=node
</code></pre>

<p>或</p>

<pre><code>nvm install v10.16.2 --reinstall-packages-from=10.16.0
</code></pre>

<h3>.nvmrc</h3>

<p>它存储在工程根目录中，用于记录该工程依赖的Node.js版本</p>

<pre><code class="bash">echo 10.16.2 &gt; .nvmrc
</code></pre>

<p>进入工程目录（当前目录），运行</p>

<pre><code class="bash">nvm use
</code></pre>

<p>将根据.nvmrc指定shell的Nodejs版本</p>

<h2>三、升级nvm</h2>

<pre><code class="bash">cd $NVM_DIR
git fetch origin
git checkout `git describe --abbrev=0 --tags`
</code></pre>

<p>升级完成后，需要重新激活nvm</p>

<pre><code class="bash">. $NVM_DIR/nvm.sh
</code></pre>

<h2>四、制作Docker镜像</h2>

<p>若不希望使用NodeJS的官方Docker镜像，可利用nvm创建镜像：</p>

<pre><code class="Dockerfile">FROM ubuntu:bionic
MAINTAINER ...

ENV DEBIAN_FRONTEND noninteractive
ENV NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node
ENV NODE_VERSION 10.16.2
ENV PATH /root/.nvm/versions/node/v$NODE_VERSION/bin:$PATH

RUN set -eux; \
    apt-get update; \
    apt-get install --no-install-recommends -y wget ca-certificates; \
    wget -O- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash; \
    apt-get remove --purge -y wget ca-certificates; \
    apt-get autoremove --purge -y; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/* /root/.nvm/.cache
</code></pre>
]]></content>
  </entry>
  
</feed>
